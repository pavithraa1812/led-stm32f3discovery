
led4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006e8  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800087c  0800087c  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800087c  0800087c  00020014  2**0
                  CONTENTS
  4 .ARM          00000000  0800087c  0800087c  00020014  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800087c  0800087c  00020014  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800087c  0800087c  0001087c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000880  08000880  00010880  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000014  20000000  08000884  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000014  08000898  00020014  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000044  08000898  00020044  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020014  2**0
                  CONTENTS, READONLY
 12 .debug_info   000002ad  00000000  00000000  00020044  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000000fe  00000000  00000000  000202f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000a0  00000000  00000000  000203f0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000088  00000000  00000000  00020490  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00000f08  00000000  00000000  00020518  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000581  00000000  00000000  00021420  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00003b3a  00000000  00000000  000219a1  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000254db  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d4  00000000  00000000  00025558  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000014 	.word	0x20000014
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000864 	.word	0x08000864

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000018 	.word	0x20000018
 80001d0:	08000864 	.word	0x08000864

080001d4 <main>:
uint32_t *p31=(uint32_t*)0X48001014;
uint32_t *p1=(uint32_t*)0X40021014;
uint32_t *p2=(uint32_t*)0X48001000;
uint32_t *p3=(uint32_t*)0X48001014;
int main()
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	af00      	add	r7, sp, #0
			*p1 |=(1<<21);
 80001d8:	4b1e      	ldr	r3, [pc, #120]	; (8000254 <main+0x80>)
 80001da:	681b      	ldr	r3, [r3, #0]
 80001dc:	681a      	ldr	r2, [r3, #0]
 80001de:	4b1d      	ldr	r3, [pc, #116]	; (8000254 <main+0x80>)
 80001e0:	681b      	ldr	r3, [r3, #0]
 80001e2:	f442 1200 	orr.w	r2, r2, #2097152	; 0x200000
 80001e6:	601a      	str	r2, [r3, #0]

			while(1)
			{
				p=1;
 80001e8:	4b1b      	ldr	r3, [pc, #108]	; (8000258 <main+0x84>)
 80001ea:	2201      	movs	r2, #1
 80001ec:	601a      	str	r2, [r3, #0]
				do
				{
				switch(p)
 80001ee:	4b1a      	ldr	r3, [pc, #104]	; (8000258 <main+0x84>)
 80001f0:	681b      	ldr	r3, [r3, #0]
 80001f2:	3b01      	subs	r3, #1
 80001f4:	2b04      	cmp	r3, #4
 80001f6:	d822      	bhi.n	800023e <main+0x6a>
 80001f8:	a201      	add	r2, pc, #4	; (adr r2, 8000200 <main+0x2c>)
 80001fa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80001fe:	bf00      	nop
 8000200:	08000215 	.word	0x08000215
 8000204:	0800021b 	.word	0x0800021b
 8000208:	08000221 	.word	0x08000221
 800020c:	08000227 	.word	0x08000227
 8000210:	0800022d 	.word	0x0800022d
				{
				case 1:
						function1();
 8000214:	f000 f960 	bl	80004d8 <function1>
						break;
 8000218:	e011      	b.n	800023e <main+0x6a>

				case 2:
						function2();
 800021a:	f000 f9c3 	bl	80005a4 <function2>
						break;
 800021e:	e00e      	b.n	800023e <main+0x6a>

				case 3:
						function3();
 8000220:	f000 fa52 	bl	80006c8 <function3>
						break;
 8000224:	e00b      	b.n	800023e <main+0x6a>
				case 4:
						function4();
 8000226:	f000 fa7d 	bl	8000724 <function4>
						break;
 800022a:	e008      	b.n	800023e <main+0x6a>

				case 5:
						function5();
 800022c:	f000 faaa 	bl	8000784 <function5>
						delay();
 8000230:	f000 f836 	bl	80002a0 <delay>
						clear();
 8000234:	f000 f812 	bl	800025c <clear>
						function5();
 8000238:	f000 faa4 	bl	8000784 <function5>
						break;
 800023c:	bf00      	nop

				}
				p++;
 800023e:	4b06      	ldr	r3, [pc, #24]	; (8000258 <main+0x84>)
 8000240:	681b      	ldr	r3, [r3, #0]
 8000242:	3301      	adds	r3, #1
 8000244:	4a04      	ldr	r2, [pc, #16]	; (8000258 <main+0x84>)
 8000246:	6013      	str	r3, [r2, #0]
				}while(p<=5);
 8000248:	4b03      	ldr	r3, [pc, #12]	; (8000258 <main+0x84>)
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	2b05      	cmp	r3, #5
 800024e:	ddce      	ble.n	80001ee <main+0x1a>
				p=1;
 8000250:	e7ca      	b.n	80001e8 <main+0x14>
 8000252:	bf00      	nop
 8000254:	20000008 	.word	0x20000008
 8000258:	20000030 	.word	0x20000030

0800025c <clear>:
			}
}
void clear()
{
 800025c:	b480      	push	{r7}
 800025e:	b085      	sub	sp, #20
 8000260:	af00      	add	r7, sp, #0
	uint32_t *p21=(uint32_t*)0X48001000;
 8000262:	4b0d      	ldr	r3, [pc, #52]	; (8000298 <clear+0x3c>)
 8000264:	60fb      	str	r3, [r7, #12]
	uint32_t *p31=(uint32_t*)0X48001014;
 8000266:	4b0d      	ldr	r3, [pc, #52]	; (800029c <clear+0x40>)
 8000268:	60bb      	str	r3, [r7, #8]

	uint32_t *p22=(uint32_t*)0X48001000;
 800026a:	4b0b      	ldr	r3, [pc, #44]	; (8000298 <clear+0x3c>)
 800026c:	607b      	str	r3, [r7, #4]
	uint32_t *p32=(uint32_t*)0X48001014;
 800026e:	4b0b      	ldr	r3, [pc, #44]	; (800029c <clear+0x40>)
 8000270:	603b      	str	r3, [r7, #0]

	*p21 &=00000000;
 8000272:	68fb      	ldr	r3, [r7, #12]
 8000274:	2200      	movs	r2, #0
 8000276:	601a      	str	r2, [r3, #0]
	*p31 &=00000000;
 8000278:	68bb      	ldr	r3, [r7, #8]
 800027a:	2200      	movs	r2, #0
 800027c:	601a      	str	r2, [r3, #0]

	*p22 &=00000000;
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	2200      	movs	r2, #0
 8000282:	601a      	str	r2, [r3, #0]
	*p32 &=00000000;
 8000284:	683b      	ldr	r3, [r7, #0]
 8000286:	2200      	movs	r2, #0
 8000288:	601a      	str	r2, [r3, #0]

}
 800028a:	bf00      	nop
 800028c:	3714      	adds	r7, #20
 800028e:	46bd      	mov	sp, r7
 8000290:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000294:	4770      	bx	lr
 8000296:	bf00      	nop
 8000298:	48001000 	.word	0x48001000
 800029c:	48001014 	.word	0x48001014

080002a0 <delay>:
void delay()
{
 80002a0:	b480      	push	{r7}
 80002a2:	b083      	sub	sp, #12
 80002a4:	af00      	add	r7, sp, #0
	int i;
	for(i=300000;i>=0;i--);
 80002a6:	4b07      	ldr	r3, [pc, #28]	; (80002c4 <delay+0x24>)
 80002a8:	607b      	str	r3, [r7, #4]
 80002aa:	e002      	b.n	80002b2 <delay+0x12>
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	3b01      	subs	r3, #1
 80002b0:	607b      	str	r3, [r7, #4]
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	2b00      	cmp	r3, #0
 80002b6:	daf9      	bge.n	80002ac <delay+0xc>
}
 80002b8:	bf00      	nop
 80002ba:	370c      	adds	r7, #12
 80002bc:	46bd      	mov	sp, r7
 80002be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c2:	4770      	bx	lr
 80002c4:	000493e0 	.word	0x000493e0

080002c8 <blue>:
void blue(int i)
{
 80002c8:	b480      	push	{r7}
 80002ca:	b083      	sub	sp, #12
 80002cc:	af00      	add	r7, sp, #0
 80002ce:	6078      	str	r0, [r7, #4]
	if(i==1)
 80002d0:	687b      	ldr	r3, [r7, #4]
 80002d2:	2b01      	cmp	r3, #1
 80002d4:	d118      	bne.n	8000308 <blue+0x40>
	{
		*p2 &=~(12<<16);
 80002d6:	4b1b      	ldr	r3, [pc, #108]	; (8000344 <blue+0x7c>)
 80002d8:	681b      	ldr	r3, [r3, #0]
 80002da:	681a      	ldr	r2, [r3, #0]
 80002dc:	4b19      	ldr	r3, [pc, #100]	; (8000344 <blue+0x7c>)
 80002de:	681b      	ldr	r3, [r3, #0]
 80002e0:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 80002e4:	601a      	str	r2, [r3, #0]
		*p2 |=(1<<16);
 80002e6:	4b17      	ldr	r3, [pc, #92]	; (8000344 <blue+0x7c>)
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	681a      	ldr	r2, [r3, #0]
 80002ec:	4b15      	ldr	r3, [pc, #84]	; (8000344 <blue+0x7c>)
 80002ee:	681b      	ldr	r3, [r3, #0]
 80002f0:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 80002f4:	601a      	str	r2, [r3, #0]
		*p3 |=(1<<8);
 80002f6:	4b14      	ldr	r3, [pc, #80]	; (8000348 <blue+0x80>)
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	681a      	ldr	r2, [r3, #0]
 80002fc:	4b12      	ldr	r3, [pc, #72]	; (8000348 <blue+0x80>)
 80002fe:	681b      	ldr	r3, [r3, #0]
 8000300:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8000304:	601a      	str	r2, [r3, #0]
	{
		*p2 &=~(12<<24);
		*p2 |=(1<<24);
		*p3 |=(1<<12);
	}
}
 8000306:	e017      	b.n	8000338 <blue+0x70>
		*p2 &=~(12<<24);
 8000308:	4b0e      	ldr	r3, [pc, #56]	; (8000344 <blue+0x7c>)
 800030a:	681b      	ldr	r3, [r3, #0]
 800030c:	681a      	ldr	r2, [r3, #0]
 800030e:	4b0d      	ldr	r3, [pc, #52]	; (8000344 <blue+0x7c>)
 8000310:	681b      	ldr	r3, [r3, #0]
 8000312:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 8000316:	601a      	str	r2, [r3, #0]
		*p2 |=(1<<24);
 8000318:	4b0a      	ldr	r3, [pc, #40]	; (8000344 <blue+0x7c>)
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	681a      	ldr	r2, [r3, #0]
 800031e:	4b09      	ldr	r3, [pc, #36]	; (8000344 <blue+0x7c>)
 8000320:	681b      	ldr	r3, [r3, #0]
 8000322:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8000326:	601a      	str	r2, [r3, #0]
		*p3 |=(1<<12);
 8000328:	4b07      	ldr	r3, [pc, #28]	; (8000348 <blue+0x80>)
 800032a:	681b      	ldr	r3, [r3, #0]
 800032c:	681a      	ldr	r2, [r3, #0]
 800032e:	4b06      	ldr	r3, [pc, #24]	; (8000348 <blue+0x80>)
 8000330:	681b      	ldr	r3, [r3, #0]
 8000332:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8000336:	601a      	str	r2, [r3, #0]
}
 8000338:	bf00      	nop
 800033a:	370c      	adds	r7, #12
 800033c:	46bd      	mov	sp, r7
 800033e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000342:	4770      	bx	lr
 8000344:	2000000c 	.word	0x2000000c
 8000348:	20000010 	.word	0x20000010

0800034c <red>:
void red(int i)
{
 800034c:	b480      	push	{r7}
 800034e:	b083      	sub	sp, #12
 8000350:	af00      	add	r7, sp, #0
 8000352:	6078      	str	r0, [r7, #4]
	if(i==1)
 8000354:	687b      	ldr	r3, [r7, #4]
 8000356:	2b01      	cmp	r3, #1
 8000358:	d118      	bne.n	800038c <red+0x40>
	{
		*p2 &=~(3<<18);
 800035a:	4b1b      	ldr	r3, [pc, #108]	; (80003c8 <red+0x7c>)
 800035c:	681b      	ldr	r3, [r3, #0]
 800035e:	681a      	ldr	r2, [r3, #0]
 8000360:	4b19      	ldr	r3, [pc, #100]	; (80003c8 <red+0x7c>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	f422 2240 	bic.w	r2, r2, #786432	; 0xc0000
 8000368:	601a      	str	r2, [r3, #0]
		*p2 |=(1<<18);
 800036a:	4b17      	ldr	r3, [pc, #92]	; (80003c8 <red+0x7c>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	681a      	ldr	r2, [r3, #0]
 8000370:	4b15      	ldr	r3, [pc, #84]	; (80003c8 <red+0x7c>)
 8000372:	681b      	ldr	r3, [r3, #0]
 8000374:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 8000378:	601a      	str	r2, [r3, #0]
		*p3 |=(1<<9);
 800037a:	4b14      	ldr	r3, [pc, #80]	; (80003cc <red+0x80>)
 800037c:	681b      	ldr	r3, [r3, #0]
 800037e:	681a      	ldr	r2, [r3, #0]
 8000380:	4b12      	ldr	r3, [pc, #72]	; (80003cc <red+0x80>)
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8000388:	601a      	str	r2, [r3, #0]
	{
		*p2 &=~(3<<26);
		*p2 |=(1<<26);
		*p3 |=(1<<13);
	}
}
 800038a:	e017      	b.n	80003bc <red+0x70>
		*p2 &=~(3<<26);
 800038c:	4b0e      	ldr	r3, [pc, #56]	; (80003c8 <red+0x7c>)
 800038e:	681b      	ldr	r3, [r3, #0]
 8000390:	681a      	ldr	r2, [r3, #0]
 8000392:	4b0d      	ldr	r3, [pc, #52]	; (80003c8 <red+0x7c>)
 8000394:	681b      	ldr	r3, [r3, #0]
 8000396:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 800039a:	601a      	str	r2, [r3, #0]
		*p2 |=(1<<26);
 800039c:	4b0a      	ldr	r3, [pc, #40]	; (80003c8 <red+0x7c>)
 800039e:	681b      	ldr	r3, [r3, #0]
 80003a0:	681a      	ldr	r2, [r3, #0]
 80003a2:	4b09      	ldr	r3, [pc, #36]	; (80003c8 <red+0x7c>)
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 80003aa:	601a      	str	r2, [r3, #0]
		*p3 |=(1<<13);
 80003ac:	4b07      	ldr	r3, [pc, #28]	; (80003cc <red+0x80>)
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	681a      	ldr	r2, [r3, #0]
 80003b2:	4b06      	ldr	r3, [pc, #24]	; (80003cc <red+0x80>)
 80003b4:	681b      	ldr	r3, [r3, #0]
 80003b6:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80003ba:	601a      	str	r2, [r3, #0]
}
 80003bc:	bf00      	nop
 80003be:	370c      	adds	r7, #12
 80003c0:	46bd      	mov	sp, r7
 80003c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c6:	4770      	bx	lr
 80003c8:	2000000c 	.word	0x2000000c
 80003cc:	20000010 	.word	0x20000010

080003d0 <orange>:

void orange(int i)
{
 80003d0:	b480      	push	{r7}
 80003d2:	b083      	sub	sp, #12
 80003d4:	af00      	add	r7, sp, #0
 80003d6:	6078      	str	r0, [r7, #4]
	if(i==1)
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	2b01      	cmp	r3, #1
 80003dc:	d118      	bne.n	8000410 <orange+0x40>
	{
		*p2 &=~(12<<20);
 80003de:	4b1b      	ldr	r3, [pc, #108]	; (800044c <orange+0x7c>)
 80003e0:	681b      	ldr	r3, [r3, #0]
 80003e2:	681a      	ldr	r2, [r3, #0]
 80003e4:	4b19      	ldr	r3, [pc, #100]	; (800044c <orange+0x7c>)
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 80003ec:	601a      	str	r2, [r3, #0]
		*p2 |=(1<<20);
 80003ee:	4b17      	ldr	r3, [pc, #92]	; (800044c <orange+0x7c>)
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	681a      	ldr	r2, [r3, #0]
 80003f4:	4b15      	ldr	r3, [pc, #84]	; (800044c <orange+0x7c>)
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80003fc:	601a      	str	r2, [r3, #0]
		*p3 |=(1<<10);
 80003fe:	4b14      	ldr	r3, [pc, #80]	; (8000450 <orange+0x80>)
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	681a      	ldr	r2, [r3, #0]
 8000404:	4b12      	ldr	r3, [pc, #72]	; (8000450 <orange+0x80>)
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800040c:	601a      	str	r2, [r3, #0]
	{
		*p2 &=~(12<<28);
		*p2 |=(1<<28);
		*p3 |=(1<<14);
	}
}
 800040e:	e017      	b.n	8000440 <orange+0x70>
		*p2 &=~(12<<28);
 8000410:	4b0e      	ldr	r3, [pc, #56]	; (800044c <orange+0x7c>)
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	681a      	ldr	r2, [r3, #0]
 8000416:	4b0d      	ldr	r3, [pc, #52]	; (800044c <orange+0x7c>)
 8000418:	681b      	ldr	r3, [r3, #0]
 800041a:	f022 4240 	bic.w	r2, r2, #3221225472	; 0xc0000000
 800041e:	601a      	str	r2, [r3, #0]
		*p2 |=(1<<28);
 8000420:	4b0a      	ldr	r3, [pc, #40]	; (800044c <orange+0x7c>)
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	681a      	ldr	r2, [r3, #0]
 8000426:	4b09      	ldr	r3, [pc, #36]	; (800044c <orange+0x7c>)
 8000428:	681b      	ldr	r3, [r3, #0]
 800042a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800042e:	601a      	str	r2, [r3, #0]
		*p3 |=(1<<14);
 8000430:	4b07      	ldr	r3, [pc, #28]	; (8000450 <orange+0x80>)
 8000432:	681b      	ldr	r3, [r3, #0]
 8000434:	681a      	ldr	r2, [r3, #0]
 8000436:	4b06      	ldr	r3, [pc, #24]	; (8000450 <orange+0x80>)
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800043e:	601a      	str	r2, [r3, #0]
}
 8000440:	bf00      	nop
 8000442:	370c      	adds	r7, #12
 8000444:	46bd      	mov	sp, r7
 8000446:	f85d 7b04 	ldr.w	r7, [sp], #4
 800044a:	4770      	bx	lr
 800044c:	2000000c 	.word	0x2000000c
 8000450:	20000010 	.word	0x20000010

08000454 <green>:
void green(int i)
{
 8000454:	b480      	push	{r7}
 8000456:	b083      	sub	sp, #12
 8000458:	af00      	add	r7, sp, #0
 800045a:	6078      	str	r0, [r7, #4]
	if(i==1)
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	2b01      	cmp	r3, #1
 8000460:	d118      	bne.n	8000494 <green+0x40>
	{
		*p2 &=~(3<<22);
 8000462:	4b1b      	ldr	r3, [pc, #108]	; (80004d0 <green+0x7c>)
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	681a      	ldr	r2, [r3, #0]
 8000468:	4b19      	ldr	r3, [pc, #100]	; (80004d0 <green+0x7c>)
 800046a:	681b      	ldr	r3, [r3, #0]
 800046c:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 8000470:	601a      	str	r2, [r3, #0]
		*p2 |=(1<<22);
 8000472:	4b17      	ldr	r3, [pc, #92]	; (80004d0 <green+0x7c>)
 8000474:	681b      	ldr	r3, [r3, #0]
 8000476:	681a      	ldr	r2, [r3, #0]
 8000478:	4b15      	ldr	r3, [pc, #84]	; (80004d0 <green+0x7c>)
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8000480:	601a      	str	r2, [r3, #0]
		*p3 |=(1<<11);
 8000482:	4b14      	ldr	r3, [pc, #80]	; (80004d4 <green+0x80>)
 8000484:	681b      	ldr	r3, [r3, #0]
 8000486:	681a      	ldr	r2, [r3, #0]
 8000488:	4b12      	ldr	r3, [pc, #72]	; (80004d4 <green+0x80>)
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8000490:	601a      	str	r2, [r3, #0]
	{
		*p2 &=~(3<<30);
		*p2 |=(1<<30);
		*p3 |=(1<<15);
	}
}
 8000492:	e017      	b.n	80004c4 <green+0x70>
		*p2 &=~(3<<30);
 8000494:	4b0e      	ldr	r3, [pc, #56]	; (80004d0 <green+0x7c>)
 8000496:	681b      	ldr	r3, [r3, #0]
 8000498:	681a      	ldr	r2, [r3, #0]
 800049a:	4b0d      	ldr	r3, [pc, #52]	; (80004d0 <green+0x7c>)
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	f022 4240 	bic.w	r2, r2, #3221225472	; 0xc0000000
 80004a2:	601a      	str	r2, [r3, #0]
		*p2 |=(1<<30);
 80004a4:	4b0a      	ldr	r3, [pc, #40]	; (80004d0 <green+0x7c>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	681a      	ldr	r2, [r3, #0]
 80004aa:	4b09      	ldr	r3, [pc, #36]	; (80004d0 <green+0x7c>)
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80004b2:	601a      	str	r2, [r3, #0]
		*p3 |=(1<<15);
 80004b4:	4b07      	ldr	r3, [pc, #28]	; (80004d4 <green+0x80>)
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	681a      	ldr	r2, [r3, #0]
 80004ba:	4b06      	ldr	r3, [pc, #24]	; (80004d4 <green+0x80>)
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80004c2:	601a      	str	r2, [r3, #0]
}
 80004c4:	bf00      	nop
 80004c6:	370c      	adds	r7, #12
 80004c8:	46bd      	mov	sp, r7
 80004ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004ce:	4770      	bx	lr
 80004d0:	2000000c 	.word	0x2000000c
 80004d4:	20000010 	.word	0x20000010

080004d8 <function1>:
void function1()
{
 80004d8:	b580      	push	{r7, lr}
 80004da:	af00      	add	r7, sp, #0
	i=8,j=12;
 80004dc:	4b2c      	ldr	r3, [pc, #176]	; (8000590 <function1+0xb8>)
 80004de:	2208      	movs	r2, #8
 80004e0:	601a      	str	r2, [r3, #0]
 80004e2:	4b2c      	ldr	r3, [pc, #176]	; (8000594 <function1+0xbc>)
 80004e4:	220c      	movs	r2, #12
 80004e6:	601a      	str	r2, [r3, #0]
	k=i*2;
 80004e8:	4b29      	ldr	r3, [pc, #164]	; (8000590 <function1+0xb8>)
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	005b      	lsls	r3, r3, #1
 80004ee:	4a2a      	ldr	r2, [pc, #168]	; (8000598 <function1+0xc0>)
 80004f0:	6013      	str	r3, [r2, #0]
	while((i>=8)&&(i<=15))
 80004f2:	e03f      	b.n	8000574 <function1+0x9c>
	{
		*p2 &=~(j<<k);
 80004f4:	4b29      	ldr	r3, [pc, #164]	; (800059c <function1+0xc4>)
 80004f6:	681b      	ldr	r3, [r3, #0]
 80004f8:	681a      	ldr	r2, [r3, #0]
 80004fa:	4b26      	ldr	r3, [pc, #152]	; (8000594 <function1+0xbc>)
 80004fc:	6819      	ldr	r1, [r3, #0]
 80004fe:	4b26      	ldr	r3, [pc, #152]	; (8000598 <function1+0xc0>)
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	fa01 f303 	lsl.w	r3, r1, r3
 8000506:	43db      	mvns	r3, r3
 8000508:	4619      	mov	r1, r3
 800050a:	4b24      	ldr	r3, [pc, #144]	; (800059c <function1+0xc4>)
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	400a      	ands	r2, r1
 8000510:	601a      	str	r2, [r3, #0]
		*p2 |=(1<<k);
 8000512:	4b22      	ldr	r3, [pc, #136]	; (800059c <function1+0xc4>)
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	681a      	ldr	r2, [r3, #0]
 8000518:	4b1f      	ldr	r3, [pc, #124]	; (8000598 <function1+0xc0>)
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	2101      	movs	r1, #1
 800051e:	fa01 f303 	lsl.w	r3, r1, r3
 8000522:	4619      	mov	r1, r3
 8000524:	4b1d      	ldr	r3, [pc, #116]	; (800059c <function1+0xc4>)
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	430a      	orrs	r2, r1
 800052a:	601a      	str	r2, [r3, #0]
		*p3 |=(1<<i);
 800052c:	4b1c      	ldr	r3, [pc, #112]	; (80005a0 <function1+0xc8>)
 800052e:	681b      	ldr	r3, [r3, #0]
 8000530:	681a      	ldr	r2, [r3, #0]
 8000532:	4b17      	ldr	r3, [pc, #92]	; (8000590 <function1+0xb8>)
 8000534:	681b      	ldr	r3, [r3, #0]
 8000536:	2101      	movs	r1, #1
 8000538:	fa01 f303 	lsl.w	r3, r1, r3
 800053c:	4619      	mov	r1, r3
 800053e:	4b18      	ldr	r3, [pc, #96]	; (80005a0 <function1+0xc8>)
 8000540:	681b      	ldr	r3, [r3, #0]
 8000542:	430a      	orrs	r2, r1
 8000544:	601a      	str	r2, [r3, #0]
		++i;
 8000546:	4b12      	ldr	r3, [pc, #72]	; (8000590 <function1+0xb8>)
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	3301      	adds	r3, #1
 800054c:	4a10      	ldr	r2, [pc, #64]	; (8000590 <function1+0xb8>)
 800054e:	6013      	str	r3, [r2, #0]
		k=i*2;
 8000550:	4b0f      	ldr	r3, [pc, #60]	; (8000590 <function1+0xb8>)
 8000552:	681b      	ldr	r3, [r3, #0]
 8000554:	005b      	lsls	r3, r3, #1
 8000556:	4a10      	ldr	r2, [pc, #64]	; (8000598 <function1+0xc0>)
 8000558:	6013      	str	r3, [r2, #0]
		j=(j==12)?3:12;
 800055a:	4b0e      	ldr	r3, [pc, #56]	; (8000594 <function1+0xbc>)
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	2b0c      	cmp	r3, #12
 8000560:	d101      	bne.n	8000566 <function1+0x8e>
 8000562:	2303      	movs	r3, #3
 8000564:	e000      	b.n	8000568 <function1+0x90>
 8000566:	230c      	movs	r3, #12
 8000568:	4a0a      	ldr	r2, [pc, #40]	; (8000594 <function1+0xbc>)
 800056a:	6013      	str	r3, [r2, #0]
		delay();
 800056c:	f7ff fe98 	bl	80002a0 <delay>
		clear();
 8000570:	f7ff fe74 	bl	800025c <clear>
	while((i>=8)&&(i<=15))
 8000574:	4b06      	ldr	r3, [pc, #24]	; (8000590 <function1+0xb8>)
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	2b07      	cmp	r3, #7
 800057a:	dd03      	ble.n	8000584 <function1+0xac>
 800057c:	4b04      	ldr	r3, [pc, #16]	; (8000590 <function1+0xb8>)
 800057e:	681b      	ldr	r3, [r3, #0]
 8000580:	2b0f      	cmp	r3, #15
 8000582:	ddb7      	ble.n	80004f4 <function1+0x1c>
	}
	delay();
 8000584:	f7ff fe8c 	bl	80002a0 <delay>
	clear();
 8000588:	f7ff fe68 	bl	800025c <clear>
}
 800058c:	bf00      	nop
 800058e:	bd80      	pop	{r7, pc}
 8000590:	20000040 	.word	0x20000040
 8000594:	20000034 	.word	0x20000034
 8000598:	2000003c 	.word	0x2000003c
 800059c:	2000000c 	.word	0x2000000c
 80005a0:	20000010 	.word	0x20000010

080005a4 <function2>:
void function2()
{
 80005a4:	b580      	push	{r7, lr}
 80005a6:	af00      	add	r7, sp, #0
	i=8,j=12,l=3;
 80005a8:	4b3f      	ldr	r3, [pc, #252]	; (80006a8 <function2+0x104>)
 80005aa:	2208      	movs	r2, #8
 80005ac:	601a      	str	r2, [r3, #0]
 80005ae:	4b3f      	ldr	r3, [pc, #252]	; (80006ac <function2+0x108>)
 80005b0:	220c      	movs	r2, #12
 80005b2:	601a      	str	r2, [r3, #0]
 80005b4:	4b3e      	ldr	r3, [pc, #248]	; (80006b0 <function2+0x10c>)
 80005b6:	2203      	movs	r2, #3
 80005b8:	601a      	str	r2, [r3, #0]
	k=i*2;
 80005ba:	4b3b      	ldr	r3, [pc, #236]	; (80006a8 <function2+0x104>)
 80005bc:	681b      	ldr	r3, [r3, #0]
 80005be:	005b      	lsls	r3, r3, #1
 80005c0:	4a3c      	ldr	r2, [pc, #240]	; (80006b4 <function2+0x110>)
 80005c2:	6013      	str	r3, [r2, #0]
	while((i>=8)&&(i<=11))
 80005c4:	e062      	b.n	800068c <function2+0xe8>
	{
		*p2 &=~(j<<k);
 80005c6:	4b3c      	ldr	r3, [pc, #240]	; (80006b8 <function2+0x114>)
 80005c8:	681b      	ldr	r3, [r3, #0]
 80005ca:	681a      	ldr	r2, [r3, #0]
 80005cc:	4b37      	ldr	r3, [pc, #220]	; (80006ac <function2+0x108>)
 80005ce:	6819      	ldr	r1, [r3, #0]
 80005d0:	4b38      	ldr	r3, [pc, #224]	; (80006b4 <function2+0x110>)
 80005d2:	681b      	ldr	r3, [r3, #0]
 80005d4:	fa01 f303 	lsl.w	r3, r1, r3
 80005d8:	43db      	mvns	r3, r3
 80005da:	4619      	mov	r1, r3
 80005dc:	4b36      	ldr	r3, [pc, #216]	; (80006b8 <function2+0x114>)
 80005de:	681b      	ldr	r3, [r3, #0]
 80005e0:	400a      	ands	r2, r1
 80005e2:	601a      	str	r2, [r3, #0]
		*p2 |=(1<<k);
 80005e4:	4b34      	ldr	r3, [pc, #208]	; (80006b8 <function2+0x114>)
 80005e6:	681b      	ldr	r3, [r3, #0]
 80005e8:	681a      	ldr	r2, [r3, #0]
 80005ea:	4b32      	ldr	r3, [pc, #200]	; (80006b4 <function2+0x110>)
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	2101      	movs	r1, #1
 80005f0:	fa01 f303 	lsl.w	r3, r1, r3
 80005f4:	4619      	mov	r1, r3
 80005f6:	4b30      	ldr	r3, [pc, #192]	; (80006b8 <function2+0x114>)
 80005f8:	681b      	ldr	r3, [r3, #0]
 80005fa:	430a      	orrs	r2, r1
 80005fc:	601a      	str	r2, [r3, #0]
		*p3 |=(1<<i);
 80005fe:	4b2f      	ldr	r3, [pc, #188]	; (80006bc <function2+0x118>)
 8000600:	681b      	ldr	r3, [r3, #0]
 8000602:	681a      	ldr	r2, [r3, #0]
 8000604:	4b28      	ldr	r3, [pc, #160]	; (80006a8 <function2+0x104>)
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	2101      	movs	r1, #1
 800060a:	fa01 f303 	lsl.w	r3, r1, r3
 800060e:	4619      	mov	r1, r3
 8000610:	4b2a      	ldr	r3, [pc, #168]	; (80006bc <function2+0x118>)
 8000612:	681b      	ldr	r3, [r3, #0]
 8000614:	430a      	orrs	r2, r1
 8000616:	601a      	str	r2, [r3, #0]
		*p21 &=~(l<<(k+8));
 8000618:	4b29      	ldr	r3, [pc, #164]	; (80006c0 <function2+0x11c>)
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	681a      	ldr	r2, [r3, #0]
 800061e:	4b24      	ldr	r3, [pc, #144]	; (80006b0 <function2+0x10c>)
 8000620:	6819      	ldr	r1, [r3, #0]
 8000622:	4b24      	ldr	r3, [pc, #144]	; (80006b4 <function2+0x110>)
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	3308      	adds	r3, #8
 8000628:	fa01 f303 	lsl.w	r3, r1, r3
 800062c:	43db      	mvns	r3, r3
 800062e:	4619      	mov	r1, r3
 8000630:	4b23      	ldr	r3, [pc, #140]	; (80006c0 <function2+0x11c>)
 8000632:	681b      	ldr	r3, [r3, #0]
 8000634:	400a      	ands	r2, r1
 8000636:	601a      	str	r2, [r3, #0]
		*p21 |=(1<<(k+8));
 8000638:	4b21      	ldr	r3, [pc, #132]	; (80006c0 <function2+0x11c>)
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	681a      	ldr	r2, [r3, #0]
 800063e:	4b1d      	ldr	r3, [pc, #116]	; (80006b4 <function2+0x110>)
 8000640:	681b      	ldr	r3, [r3, #0]
 8000642:	3308      	adds	r3, #8
 8000644:	2101      	movs	r1, #1
 8000646:	fa01 f303 	lsl.w	r3, r1, r3
 800064a:	4619      	mov	r1, r3
 800064c:	4b1c      	ldr	r3, [pc, #112]	; (80006c0 <function2+0x11c>)
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	430a      	orrs	r2, r1
 8000652:	601a      	str	r2, [r3, #0]
		*p31 |=(1<<(i+4));
 8000654:	4b1b      	ldr	r3, [pc, #108]	; (80006c4 <function2+0x120>)
 8000656:	681b      	ldr	r3, [r3, #0]
 8000658:	681a      	ldr	r2, [r3, #0]
 800065a:	4b13      	ldr	r3, [pc, #76]	; (80006a8 <function2+0x104>)
 800065c:	681b      	ldr	r3, [r3, #0]
 800065e:	3304      	adds	r3, #4
 8000660:	2101      	movs	r1, #1
 8000662:	fa01 f303 	lsl.w	r3, r1, r3
 8000666:	4619      	mov	r1, r3
 8000668:	4b16      	ldr	r3, [pc, #88]	; (80006c4 <function2+0x120>)
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	430a      	orrs	r2, r1
 800066e:	601a      	str	r2, [r3, #0]
		++i;
 8000670:	4b0d      	ldr	r3, [pc, #52]	; (80006a8 <function2+0x104>)
 8000672:	681b      	ldr	r3, [r3, #0]
 8000674:	3301      	adds	r3, #1
 8000676:	4a0c      	ldr	r2, [pc, #48]	; (80006a8 <function2+0x104>)
 8000678:	6013      	str	r3, [r2, #0]
		k=i*2;
 800067a:	4b0b      	ldr	r3, [pc, #44]	; (80006a8 <function2+0x104>)
 800067c:	681b      	ldr	r3, [r3, #0]
 800067e:	005b      	lsls	r3, r3, #1
 8000680:	4a0c      	ldr	r2, [pc, #48]	; (80006b4 <function2+0x110>)
 8000682:	6013      	str	r3, [r2, #0]
		//j=(j==12)?3:12;
		delay();
 8000684:	f7ff fe0c 	bl	80002a0 <delay>
		clear();
 8000688:	f7ff fde8 	bl	800025c <clear>
	while((i>=8)&&(i<=11))
 800068c:	4b06      	ldr	r3, [pc, #24]	; (80006a8 <function2+0x104>)
 800068e:	681b      	ldr	r3, [r3, #0]
 8000690:	2b07      	cmp	r3, #7
 8000692:	dd03      	ble.n	800069c <function2+0xf8>
 8000694:	4b04      	ldr	r3, [pc, #16]	; (80006a8 <function2+0x104>)
 8000696:	681b      	ldr	r3, [r3, #0]
 8000698:	2b0b      	cmp	r3, #11
 800069a:	dd94      	ble.n	80005c6 <function2+0x22>
	}
	delay();
 800069c:	f7ff fe00 	bl	80002a0 <delay>
	clear();
 80006a0:	f7ff fddc 	bl	800025c <clear>
}
 80006a4:	bf00      	nop
 80006a6:	bd80      	pop	{r7, pc}
 80006a8:	20000040 	.word	0x20000040
 80006ac:	20000034 	.word	0x20000034
 80006b0:	20000038 	.word	0x20000038
 80006b4:	2000003c 	.word	0x2000003c
 80006b8:	2000000c 	.word	0x2000000c
 80006bc:	20000010 	.word	0x20000010
 80006c0:	20000000 	.word	0x20000000
 80006c4:	20000004 	.word	0x20000004

080006c8 <function3>:
void function3()
{
 80006c8:	b580      	push	{r7, lr}
 80006ca:	af00      	add	r7, sp, #0
	blue(1);
 80006cc:	2001      	movs	r0, #1
 80006ce:	f7ff fdfb 	bl	80002c8 <blue>
	delay();
 80006d2:	f7ff fde5 	bl	80002a0 <delay>
	red(1);
 80006d6:	2001      	movs	r0, #1
 80006d8:	f7ff fe38 	bl	800034c <red>
	delay();
 80006dc:	f7ff fde0 	bl	80002a0 <delay>
	orange(1);
 80006e0:	2001      	movs	r0, #1
 80006e2:	f7ff fe75 	bl	80003d0 <orange>
	delay();
 80006e6:	f7ff fddb 	bl	80002a0 <delay>
	green(1);
 80006ea:	2001      	movs	r0, #1
 80006ec:	f7ff feb2 	bl	8000454 <green>
	delay();
 80006f0:	f7ff fdd6 	bl	80002a0 <delay>
	blue(2);
 80006f4:	2002      	movs	r0, #2
 80006f6:	f7ff fde7 	bl	80002c8 <blue>
	delay();
 80006fa:	f7ff fdd1 	bl	80002a0 <delay>
	red(2);
 80006fe:	2002      	movs	r0, #2
 8000700:	f7ff fe24 	bl	800034c <red>
	delay();
 8000704:	f7ff fdcc 	bl	80002a0 <delay>
	orange(2);
 8000708:	2002      	movs	r0, #2
 800070a:	f7ff fe61 	bl	80003d0 <orange>
	delay();
 800070e:	f7ff fdc7 	bl	80002a0 <delay>
	green(2);
 8000712:	2002      	movs	r0, #2
 8000714:	f7ff fe9e 	bl	8000454 <green>
	delay();
 8000718:	f7ff fdc2 	bl	80002a0 <delay>
	clear();
 800071c:	f7ff fd9e 	bl	800025c <clear>
}
 8000720:	bf00      	nop
 8000722:	bd80      	pop	{r7, pc}

08000724 <function4>:
void function4()
{
 8000724:	b580      	push	{r7, lr}
 8000726:	af00      	add	r7, sp, #0
	blue(1);
 8000728:	2001      	movs	r0, #1
 800072a:	f7ff fdcd 	bl	80002c8 <blue>
	delay();
 800072e:	f7ff fdb7 	bl	80002a0 <delay>
	orange(1);
 8000732:	2001      	movs	r0, #1
 8000734:	f7ff fe4c 	bl	80003d0 <orange>
	delay();
 8000738:	f7ff fdb2 	bl	80002a0 <delay>
	blue(2);
 800073c:	2002      	movs	r0, #2
 800073e:	f7ff fdc3 	bl	80002c8 <blue>
	delay();
 8000742:	f7ff fdad 	bl	80002a0 <delay>
	orange(2);
 8000746:	2002      	movs	r0, #2
 8000748:	f7ff fe42 	bl	80003d0 <orange>
	delay();
 800074c:	f7ff fda8 	bl	80002a0 <delay>
	clear();
 8000750:	f7ff fd84 	bl	800025c <clear>
	red(1);
 8000754:	2001      	movs	r0, #1
 8000756:	f7ff fdf9 	bl	800034c <red>
	delay();
 800075a:	f7ff fda1 	bl	80002a0 <delay>
	green(1);
 800075e:	2001      	movs	r0, #1
 8000760:	f7ff fe78 	bl	8000454 <green>
	delay();
 8000764:	f7ff fd9c 	bl	80002a0 <delay>
	red(2);
 8000768:	2002      	movs	r0, #2
 800076a:	f7ff fdef 	bl	800034c <red>
	delay();
 800076e:	f7ff fd97 	bl	80002a0 <delay>
	green(2);
 8000772:	2002      	movs	r0, #2
 8000774:	f7ff fe6e 	bl	8000454 <green>
	delay();
 8000778:	f7ff fd92 	bl	80002a0 <delay>
	clear();
 800077c:	f7ff fd6e 	bl	800025c <clear>
}
 8000780:	bf00      	nop
 8000782:	bd80      	pop	{r7, pc}

08000784 <function5>:
void function5()
{
 8000784:	b580      	push	{r7, lr}
 8000786:	af00      	add	r7, sp, #0
	blue(1);
 8000788:	2001      	movs	r0, #1
 800078a:	f7ff fd9d 	bl	80002c8 <blue>
	red(1);
 800078e:	2001      	movs	r0, #1
 8000790:	f7ff fddc 	bl	800034c <red>
	orange(1);
 8000794:	2001      	movs	r0, #1
 8000796:	f7ff fe1b 	bl	80003d0 <orange>
	green(1);
 800079a:	2001      	movs	r0, #1
 800079c:	f7ff fe5a 	bl	8000454 <green>
	blue(2);
 80007a0:	2002      	movs	r0, #2
 80007a2:	f7ff fd91 	bl	80002c8 <blue>
	red(2);
 80007a6:	2002      	movs	r0, #2
 80007a8:	f7ff fdd0 	bl	800034c <red>
	orange(2);
 80007ac:	2002      	movs	r0, #2
 80007ae:	f7ff fe0f 	bl	80003d0 <orange>
	green(2);
 80007b2:	2002      	movs	r0, #2
 80007b4:	f7ff fe4e 	bl	8000454 <green>
	delay();
 80007b8:	f7ff fd72 	bl	80002a0 <delay>
	delay();
 80007bc:	f7ff fd70 	bl	80002a0 <delay>
	clear();
 80007c0:	f7ff fd4c 	bl	800025c <clear>
}
 80007c4:	bf00      	nop
 80007c6:	bd80      	pop	{r7, pc}

080007c8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80007c8:	480d      	ldr	r0, [pc, #52]	; (8000800 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80007ca:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80007cc:	480d      	ldr	r0, [pc, #52]	; (8000804 <LoopForever+0x6>)
  ldr r1, =_edata
 80007ce:	490e      	ldr	r1, [pc, #56]	; (8000808 <LoopForever+0xa>)
  ldr r2, =_sidata
 80007d0:	4a0e      	ldr	r2, [pc, #56]	; (800080c <LoopForever+0xe>)
  movs r3, #0
 80007d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80007d4:	e002      	b.n	80007dc <LoopCopyDataInit>

080007d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80007d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80007d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80007da:	3304      	adds	r3, #4

080007dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80007dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80007de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80007e0:	d3f9      	bcc.n	80007d6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80007e2:	4a0b      	ldr	r2, [pc, #44]	; (8000810 <LoopForever+0x12>)
  ldr r4, =_ebss
 80007e4:	4c0b      	ldr	r4, [pc, #44]	; (8000814 <LoopForever+0x16>)
  movs r3, #0
 80007e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80007e8:	e001      	b.n	80007ee <LoopFillZerobss>

080007ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80007ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80007ec:	3204      	adds	r2, #4

080007ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80007ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80007f0:	d3fb      	bcc.n	80007ea <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80007f2:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80007f6:	f000 f811 	bl	800081c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80007fa:	f7ff fceb 	bl	80001d4 <main>

080007fe <LoopForever>:

LoopForever:
    b LoopForever
 80007fe:	e7fe      	b.n	80007fe <LoopForever>
  ldr   r0, =_estack
 8000800:	2000a000 	.word	0x2000a000
  ldr r0, =_sdata
 8000804:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000808:	20000014 	.word	0x20000014
  ldr r2, =_sidata
 800080c:	08000884 	.word	0x08000884
  ldr r2, =_sbss
 8000810:	20000014 	.word	0x20000014
  ldr r4, =_ebss
 8000814:	20000044 	.word	0x20000044

08000818 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000818:	e7fe      	b.n	8000818 <ADC1_2_IRQHandler>
	...

0800081c <__libc_init_array>:
 800081c:	b570      	push	{r4, r5, r6, lr}
 800081e:	4e0d      	ldr	r6, [pc, #52]	; (8000854 <__libc_init_array+0x38>)
 8000820:	4c0d      	ldr	r4, [pc, #52]	; (8000858 <__libc_init_array+0x3c>)
 8000822:	1ba4      	subs	r4, r4, r6
 8000824:	10a4      	asrs	r4, r4, #2
 8000826:	2500      	movs	r5, #0
 8000828:	42a5      	cmp	r5, r4
 800082a:	d109      	bne.n	8000840 <__libc_init_array+0x24>
 800082c:	4e0b      	ldr	r6, [pc, #44]	; (800085c <__libc_init_array+0x40>)
 800082e:	4c0c      	ldr	r4, [pc, #48]	; (8000860 <__libc_init_array+0x44>)
 8000830:	f000 f818 	bl	8000864 <_init>
 8000834:	1ba4      	subs	r4, r4, r6
 8000836:	10a4      	asrs	r4, r4, #2
 8000838:	2500      	movs	r5, #0
 800083a:	42a5      	cmp	r5, r4
 800083c:	d105      	bne.n	800084a <__libc_init_array+0x2e>
 800083e:	bd70      	pop	{r4, r5, r6, pc}
 8000840:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000844:	4798      	blx	r3
 8000846:	3501      	adds	r5, #1
 8000848:	e7ee      	b.n	8000828 <__libc_init_array+0xc>
 800084a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800084e:	4798      	blx	r3
 8000850:	3501      	adds	r5, #1
 8000852:	e7f2      	b.n	800083a <__libc_init_array+0x1e>
 8000854:	0800087c 	.word	0x0800087c
 8000858:	0800087c 	.word	0x0800087c
 800085c:	0800087c 	.word	0x0800087c
 8000860:	08000880 	.word	0x08000880

08000864 <_init>:
 8000864:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000866:	bf00      	nop
 8000868:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800086a:	bc08      	pop	{r3}
 800086c:	469e      	mov	lr, r3
 800086e:	4770      	bx	lr

08000870 <_fini>:
 8000870:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000872:	bf00      	nop
 8000874:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000876:	bc08      	pop	{r3}
 8000878:	469e      	mov	lr, r3
 800087a:	4770      	bx	lr
